plugins {
    id 'java'
    id "io.ebean" version "13.10.0"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

repositories {
    maven { url "https://reposilite.appleptr16.com/appleptr16" }
    mavenLocal()
    mavenCentral()
    maven { url 'https://papermc.io/repo/repository/maven-public/' }
    maven { url 'https://repo.aikar.co/content/groups/aikar/' }
    maven {
        name 'CodeMC'
        url 'https://repo.codemc.org/repository/maven-public/'
    }
}
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

project.group groupValue
project.version versionValue

configurations {
    configureEach {
        resolutionStrategy.cacheDynamicVersionsFor 1, 'seconds'
        resolutionStrategy.cacheChangingModulesFor 1, 'seconds'
    }
}

project.ext.ebean_version = '13.11.0'
// https://search.maven.org/search?q=g:io.ebean
dependencies {
    // sql annotation processor
    annotationProcessor "io.ebean:ebean-querybean:${ebean_version}"
    annotationProcessor "io.ebean:querybean-generator:${ebean_version}"

    // sqlite connection driver
    implementation 'org.xerial:sqlite-jdbc:3.40.0.0'

    // sql ORM
    implementation "io.ebean:ebean-jackson-mapper:${ebean_version}"
    implementation "io.ebean:ebean-ddl-generator:${ebean_version}"
    implementation "io.ebean:ebean-querybean:${ebean_version}"
    implementation "io.ebean:ebean-sqlite:${ebean_version}"

    // voltksiya
    compileOnly 'mc.pmc:VoltPluginManager:3.2-SNAPSHOT'
    compileOnly 'voltskiya.utilities:VoltskiyaUtilities:2.0-SNAPSHOT'

    // minecraft api
    compileOnly 'io.papermc.paper:paper-api:1.19.2-R0.1-SNAPSHOT'

    // minecraft libraries
    compileOnly 'de.tr7zw:item-nbt-api-plugin:2.10.0'
}
ebean {
    debugLevel = 0
}

shadowJar.classifier ''
shadowJar {
    mergeServiceFiles()
    relocate 'org.sqlite', 'com.voltskiya.org.sqlite'
    relocate 'io.ebean', 'com.voltskiya.io.ebean'
    relocate 'io.ebeaninternal', 'com.voltskiya.io.ebean'
    relocate 'io.ebeanservice', 'com.voltskiya.io.ebean'
    outputs.upToDateWhen { false }
    doLast {
        copy {
            from shadowJar.getArchiveFile()
            into file(serverBuildDir)
        }
    }
}

